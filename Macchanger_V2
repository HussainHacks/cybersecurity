import subprocess
import optparse
import re
# arguments to put in with code in command line -i ,-m example: python mac_cahnger.py -i eth0 -m 00:11:22:33:44:66
def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface to change its Macaddress")
    parser.add_option("-m","--mac",dest="new_mac",help="New Mac Address")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[-] Please specify which interface use --help for more info")
    elif not options.new_mac:
        parser.error("[-] Please specify new mac address use --help for more info")
    return options
# automation
def change_mac(interface,new_mac):
    print("[+]Changing MAC address for "+ interface+" to "+ new_mac)
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])

def get_current_mac(interface):
    ifconfig_result = subprocess.check_output(["ifconfig", interface])
    mac_address_search_result = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", ifconfig_result)
    if mac_address_search_result:
        return mac_address_search_result.group(0)
    else:
        print("[-] Could mnot read MAC address.")
# calling
options = get_arguments()
current_mac= get_current_mac(options.interface)
print("Current MAC = " + str(current_mac))
change_mac(options.interface, options.new_mac)
current_mac = get_current_mac(options.interface)
if current_mac == options.new_mac:
    print("[+] MAC address was changed successfully to "+ current_mac)
else:
    print("[-] MAC address did not get changed.")

